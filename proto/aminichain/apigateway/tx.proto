syntax = "proto3";

package aminichain.apigateway;

import "amino/amino.proto";
import "cosmos/msg/v1/msg.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "aminichain/apigateway/params.proto";

option go_package = "aminichain/x/apigateway/types";

// Msg defines the Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;
  
  // UpdateParams defines a (governance) operation for updating the module
  // parameters. The authority defaults to the x/gov module account.
  rpc UpdateParams        (MsgUpdateParams       ) returns (MsgUpdateParamsResponse       );
  rpc RegisterComputeTask (MsgRegisterComputeTask) returns (MsgRegisterComputeTaskResponse);
  rpc ScheduleJob         (MsgScheduleJob        ) returns (MsgScheduleJobResponse        );
  rpc OraclePushResult    (MsgOraclePushResult   ) returns (MsgOraclePushResultResponse   );
}
// MsgUpdateParams is the Msg/UpdateParams request type.
message MsgUpdateParams {
  option (cosmos.msg.v1.signer) =                               "authority";
  option           (amino.name) = "aminichain/x/apigateway/MsgUpdateParams";
  
  // authority is the address that controls the module (defaults to x/gov unless overwritten).
  string authority = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  // params defines the module parameters to update.
  
  // NOTE: All parameters must be supplied.
  Params params = 2 [(gogoproto.nullable) = false, (amino.dont_omitempty) = true];
}

// MsgUpdateParamsResponse defines the response structure for executing a
// MsgUpdateParams message.
message MsgUpdateParamsResponse {}

message MsgRegisterComputeTask {
  option (cosmos.msg.v1.signer) = "creator";
  string creator     = 1;
  string description = 2;
  string uri         = 3;
  string inputShape  = 4;
  string outputShape = 5;
  uint64 computeType = 6;
  string inputSample = 7;
}

message MsgRegisterComputeTaskResponse {
  uint64 computeId = 1;
}

message MsgScheduleJob {
  option (cosmos.msg.v1.signer) = "creator";
  string creator       = 1;
  uint64 computeTaskId = 2;
  string webhookUrl    = 3;
  string inputJson     = 4;
}

message MsgScheduleJobResponse {
  uint64 taskId = 1;
}

message MsgOraclePushResult {
  option (cosmos.msg.v1.signer) = "creator";
  string creator     = 1;
  uint64 jobId       = 2;
  string resultsJson = 3;
}

message MsgOraclePushResultResponse {
  string status = 1;
}

